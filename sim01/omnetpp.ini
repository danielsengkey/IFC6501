[General]
network = Association
sim-time-limit = 100s
user-interface = Qtenv

*.mediumType =  "Ieee80211ScalarRadioMedium"

# Mobility
**.mobility.initFromDisplayString = true
**.cli.mobilityType = "LinearMobility"
**.cli.mobility.speed = 1mps
**.cli.mobility.angle = 360deg
**.cli.mobility.acceleration = 0
**.cli.mobility.updateInterval = 100ms
**.cli.mobility.initialX = 250m
**.cli.mobility.initialY = 100m
**.cli.mobility.constraintAreaMinX = 200m
**.cli.mobility.constraintAreaMinY = 0m
**.cli.mobility.constraintAreaMinZ = 0m
**.cli.mobility.constraintAreaMaxX = 250m
**.cli.mobility.constraintAreaMaxY = 250m
**.cli.mobility.constraintAreaMaxZ = 0m

# Setting-up Wireless NIC
**.wlan[0].typename	=	"Ieee80211Nic"
**.cli.wlan[0].mgmtType = "Ieee80211MgmtSTA"
**.cli.wlan[0].mgmt.numChannels = 12
**.cli.wlan[0].radio.transmitter.power = 1mW # (0 dBm)

**.ap.wlan[0].mgmtType = "Ieee80211MgmtAP"
**.ap.wlan[0].radio.transmitter.power = 1mW # (0 dBm)

# Radio Settings
**.radio.displayCommunicationRange = true
**.radio.displayInterferenceRange = true

# UDP Settings
**.numUdpApps	= 1

## Client Side
**.cli.udpApp[0].typename = "UDPBasicApp"
**.cli.udpApp[0].destAddresses = ""
**.cli.udpApp[0].destPort = 5000
**.cli.udpApp[0].messageLength = 1024B
**.cli.udpApp[0].sendInterval = exponential(12ms)
**.cli.udpApp[0].packetName = "UDPData"

## Server Side
*.srv.udpApp[0].typename = "UDPSink"
*.srv.udpApp[0].localPort = 5000

*.visualizer.physicalLinkVisualizer.packetNameFilter = "UDPData*"
*.visualizer.dataLinkVisualizer.packetNameFilter = "UDPData*"

[Config MediumVisualizer]
**.visualizer.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.mediumVisualizer.signalPropagationUpdateInterval = 100ns
*.visualizer.physicalLinkVisualizer.packetNameFilter = "UDPData*"
*.visualizer.dataLinkVisualizer.packetNameFilter = "UDPData*"

[Config Propagation]
sim-time-limit = 60s
repeat = 100
result-dir = Propagation
# Radio Config
**.radio.receiver.sensitivity = -85dBm
**.radio.receiver.energyDetection = -110dBm
**.backgroundNoise.power = uniform(-160dBm, -140dBm)

# TCP application settings for client
**.cli.numTcpApps = 1
**.cli.tcpApp[*].typename = "TCPSessionApp"
**.cli.tcpApp[0].localAddress = ""
**.cli.tcpApp[0].localPort = -1
**.cli.tcpApp[0].connectAddress = "srv"
**.cli.tcpApp[0].connectPort = 1000
**.cli.tcpApp[0].tOpen = exponential(0.1s)
**.cli.tcpApp[0].tSend = 0
**.cli.tcpApp[0].sendBytes = 10MiB
**.cli.tcpApp[0].sendScript = ""
**.cli.tcpApp[0].tClose = 0

# TCP application settings for srv
**.srv.numTcpApps = 1
**.srv.tcpApp[0].typename = "TCPSinkApp"
**.srv.tcpApp[0].localAddress = ""
**.srv.tcpApp[0].localPort = 1000

**.cli.numPingApps = 1
**.srv.numPingApps = 1
**.cli.pingApp[*].destAddr = "srv"

# Activate UDP Module
**.cli.udpApp[0].destAddresses = "srv"

# Mobility
**.cli.mobilityType = "StationaryMobility"
**.cli.mobility.initFromDisplayString = false
**.cli.mobility.initialX = ${1, 10, 50, 75, 100, 150, 180}m + 50m
**.cli.mobility.initialY = 100m
**.cli.mobility.constraintAreaMinX = 50m

**.cli.**.scalar-recording = true
**.srv.**.scalar-recording = true

**.vector-recording = false
